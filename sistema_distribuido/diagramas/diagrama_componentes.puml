@startuml
!theme plain
title Diagrama de Componentes - Sistema Distribuido de Préstamo de Libros

skinparam component {
  BackgroundColor LightBlue
  BorderColor DarkBlue
}
skinparam package {
  BackgroundColor LightYellow
  BorderColor Orange
}

' ====================== Componentes Principales ======================

package "Gestor de Carga (GC)" {
  [GestorCarga] as GC
  note right of GC
  **Funcionalidades:**
  • REQ/REP en puerto 5001
  • PUB/SUB en puerto 5002
  • Procesamiento de solicitudes
  • Creación de eventos
  • Validación de operaciones
  end note
}

package "Proceso Solicitante (PS)" {
  [ProcesoSolicitante] as PS
  note right of PS
  **Funcionalidades:**
  • Lectura de archivo solicitudes
  • Envío de solicitudes REQ/REP
  • Manejo de estadísticas
  • Procesamiento de respuestas
  end note
}

package "Actor de Devolución" {
  [ActorDevolucion] as AD
  note right of AD
  **Funcionalidades:**
  • Suscripción a topic "devolucion"
  • Procesamiento de devoluciones
  • Actualización de ejemplares
  • Gestión de archivos JSON
  end note
}

package "Actor de Renovación" {
  [ActorRenovacion] as AR
  note right of AR
  **Funcionalidades:**
  • Suscripción a topic "renovacion"
  • Procesamiento de renovaciones
  • Actualización de fechas
  • Gestión de archivos JSON
  end note
}

' ====================== Capa de Datos ======================
package "Capa de Datos" {
  [libros.json] as LibrosDB
  [solicitudes.txt] as SolicitudesFile
  [Backup Files] as BackupFiles
}

' ====================== Infraestructura ======================
package "Infraestructura" {
  [ZeroMQ] as ZMQ
  [Docker Network] as DockerNet
  [Logging] as LOG
}

' ====================== Relaciones ======================

' --- Comunicación REQ/REP ---
PS --> GC : REQ/REP (puerto 5001)
note right of PS
**Comunicación síncrona**
Request-Response
Solicitudes inmediatas
end note

' --- Comunicación PUB/SUB ---
GC --> AD : PUB/SUB (puerto 5002, topic: devolucion)
GC --> AR : PUB/SUB (puerto 5002, topic: renovacion)
note right of GC
**Comunicación asíncrona**
Publisher-Subscriber
Eventos distribuidos
end note

' --- Acceso a Archivos ---
PS --> SolicitudesFile : lee
AD --> LibrosDB : lee/escribe
AR --> LibrosDB : lee/escribe
AD --> BackupFiles : crea backup
AR --> BackupFiles : crea backup

' --- Infraestructura ---
GC --> ZMQ : usa
PS --> ZMQ : usa
AD --> ZMQ : usa
AR --> ZMQ : usa
ZMQ --> DockerNet : comunica a través de

' --- Logging ---
GC --> LOG : registra eventos
PS --> LOG : registra solicitudes
AD --> LOG : registra devoluciones
AR --> LOG : registra renovaciones

' ====================== Notas ======================
note bottom of LibrosDB
**Estado compartido**
Actualizado por ambos actores
Control de concurrencia básico
Archivo JSON con backup automático
end note

note top of ZMQ
**ZeroMQ**
Librería de mensajería
Comunicación distribuida
Patrones REQ/REP y PUB/SUB
end note

note right of DockerNet
**Red Docker**
Bridge network
Comunicación entre contenedores
Nombres de host: gc, actor_dev, actor_ren, ps
end note

@enduml